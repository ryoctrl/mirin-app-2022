name: CI

on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - ".github/workflows/**"
      - "**/*ts"
      - "**/*css"
      - "public/**/*"

env:
  AZURE_CONTAINER_REGISTRY: botchaneng
  IMAGE_NAME: eng/botchan-push-monitor

jobs:
  check-pr:
    name: Check PR
    runs-on: ubuntu-latest
    steps:
      - name: Assigne PR issuer if needed
        if: ${{ toJSON(github.event.pull_request.assignees) == '[]' }}
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          ASSIGNEE: ${{ github.event.pull_request.user.login }}
        run: gh pr edit $PR_NUMBER --add-assignee $ASSIGNEE

      - name: Check PR is labeled
        id: check_labeled
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          ASSIGNEE: ${{ github.event.pull_request.user.login }}
        run: |
          LABELS_COUNT=$(gh pr view $PR_NUMBER --json labels --jq '.labels | length')
          if [ $LABELS_COUNT -eq 0 ]; then
            exit 1
          else
            exit 0
          fi

      - name: Notify PR check error
        if: failure() && steps.check_labeled.outcome == 'failure'
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            @${{ github.event.pull_request.user.login }}
            Please labeling your issued PR !
            And then, you should re-run pipeline by [this link](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})

  setup:
    runs-on: ubuntu-latest
    needs:
      - check-pr
    steps:
      - run: echo Begin CI pipeline

  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.14]
    needs:
      - setup
    steps:
      - name: Setup ReviewDog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install modules
        if: steps.check_cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: lint review
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          eslint_flags: "components/"

      - name: Typecheck
        run: tsc --pretty false --noEmit | reviewdog -f=tsc -reporter=github-pr-review -fail-on-error=true
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: format check
      #  run: pnpm format:check | reviewdog -f=tsc -reporter=github-pr-review -fail-on-error=true
      #  env:
      #    REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: test
      #  run: pnpm test
